name: build(golang)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths:
      - 'golang/**'
  push:
    branches:
      - main
    paths:
      - 'golang/**'
  workflow_dispatch:
  schedule:
    - cron: '0 0 3 * *'

jobs:
  golang:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: ['golang']
        suite: ['trixie', 'alpine3.21']
        version: ['1.23', '1.24']
        latest_version: ['1.24']

    steps:
      - name: Checkout ${{ matrix.name }}
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Version
        run: |
          echo "build=true" >> $GITHUB_ENV
          if [ ! -f "${{ matrix.name }}/${{ matrix.version }}/${{ matrix.suite }}/Dockerfile" ]; then
            echo "build=false" >> $GITHUB_ENV
            exit 0
          fi
          full_version=$(grep -m1 -oP "ENV GOLANG_VERSION \K.*" ${{ matrix.name }}/${{ matrix.version }}/${{ matrix.suite }}/Dockerfile)
          echo "full_version=${full_version}" >> $GITHUB_ENV
          
          version=${{ matrix.version }}
          image_tag=${version}
          full_image_tag=${full_version}

          if echo ${{ matrix.suite }} | grep -q 'alpine'; then
            image_tag=${version}-alpine
            full_image_tag=${full_version}-alpine
          fi
          echo "image_tag=${image_tag}" >> $GITHUB_ENV
          echo "full_image_tag=${full_image_tag}" >> $GITHUB_ENV

      - name: Build and push ${{ matrix.name }} ${{ matrix.version }} image
        if: env.build == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.name }}/${{ matrix.version }}/${{ matrix.suite }}/
          platforms: linux/loong64
          push: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.image_tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.full_image_tag }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }}-${{ matrix.suite }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ env.full_version }}-${{ matrix.suite }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prepare configuration
        run: |
          wget -qO- https://github.com/google/go-containerregistry/releases/latest/download/go-containerregistry_Linux_x86_64.tar.gz | sudo tar -xzf - -C /usr/local/bin/ crane
          sudo chmod +x /usr/local/bin/crane
          sudo chown root:root /usr/local/bin/crane

      - name: Pull and Push Images
        if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'
        run: |
          if [ "${{ matrix.suite }}" = "trixie" ] && [ "${{ matrix.version }}" = "${{ matrix.latest_version }}" ]; then
            full_version=${{ env.full_version }}
            minor_version=$(echo ${full_version} | cut -d'.' -f1-2)
            major_version=$(echo ${full_version} | cut -d'.' -f1)
            crane cp ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }}-${{ matrix.suite }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:latest
            crane cp ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ matrix.version }}-${{ matrix.suite }} ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${major_version}
          fi
          # https://github.com/loong64/binfmt/blob/master/Dockerfile
          GO_VERSION=1.23
          ALPINE_VERSION=3.21
          if [ "${{ matrix.suite }}" = "alpine${ALPINE_VERSION}" ] && [ "${{ matrix.version }}" = "${GO_VERSION}" ]; then
            crane cp ghcr.io/loong64/golang:${GO_VERSION}-alpine${ALPINE_VERSION} ghcr.io/loong64/golang:${GO_VERSION}-alpine${ALPINE_VERSION}-loong64
            crane index append -t ghcr.io/loong64/golang:${GO_VERSION}-alpine${ALPINE_VERSION} -m ghcr.io/loong64/golang:${GO_VERSION}-alpine${ALPINE_VERSION}-loong64 -m golang:${GO_VERSION}-alpine${ALPINE_VERSION}
          fi